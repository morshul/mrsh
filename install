#!/usr/bin/env lua

if _VERSION < 'Lua 5.4' then
  io.stderr:write('A desktop platform running Lua 5.4 or later is required.\n')
  os.exit(1)
end

local REPO_DIR = os.getenv('MRSH_REPO_DIR') or os.getenv('HOME') .. '/.mrsh'
local REPO_URL = os.getenv('MRSH_REPO_URL') or 'https://github.com/morshul/mrsh.git'

do
  local gc_cmd = string.format('git clone --recurse-submodules --depth 1 %s %s > /dev/null 2>&1', REPO_URL, REPO_DIR)

  do
    local directory = io.open(REPO_DIR, 'r')

    if directory ~= nil then
      io.stdout:write('The repository has already been cloned, skipping...\n')

      local sleep = assert(io.popen('sleep 2'))
      sleep:close()
      goto bootstrap
    end
  end

  io.stdout:write('\rDownloading the repository...')

  local git = assert(io.popen(gc_cmd), 'Failed to execute the clone command.')
  assert(git:close(), 'Failed to clone the repository.')

  io.stdout:write('\rSuccessfully downloaded the repository!\n')
end

::bootstrap::
package.path = REPO_DIR .. '/?.lua;' .. package.path

_G.assert = require('mrsh.overrides.assert')
_G.fprintf = require('mrsh.overrides.fprintf')
_G.printf = require('mrsh.overrides.printf')

_G.Object = require('mrsh.core.object')

_G.MRSH = Object()

local BOOTSTRAP = loadfile(REPO_DIR .. '/bootstrap', 't', _G)
assert(BOOTSTRAP, 'Failed to load the bootstrap file.')

BOOTSTRAP()

MRSH:emit('startup')
